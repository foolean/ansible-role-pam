# Copyright (c) 2023, Bennett Samowich <bennett@foolean.org>
# All rights reserved
# SPDX short identifier: BSD-3-Clause
---

# We put the entire role in a block so we can create
# a role specific tag, which saves the caller from
# having to do so in their playbook.
- name: Role foolean/pam
  block:

  - name: CIS | Ensure PAM and cracklib are installed
    become: true
    ansible.builtin.package:
      name:
        - 'pam'
        - 'cracklib'
      state: present

  - name: CIS | Ensure password creation requirements are configured
    become: true
    ansible.builtin.template:
      src: 'etc/security/pwquality.conf.j2'
      dest: '/etc/security/pwquality.conf'
      owner: 'root'
      group: 'root'
      mode: '0644'

  - name: CIS | Ensure lockout for failed password attempts is configured
    become: true
    ansible.builtin.template:
      src: 'etc/security/faillock.conf.j2'
      dest: '/etc/security/faillock.conf'
      owner: 'root'
      group: 'root'
      mode: '0644'

  - name: CIS | Ensure password hashing algorithm is SHA-512 (libuser.conf)
    become: true
    community.general.ini_file:
      path: '/etc/libuser.conf'
      section: 'defaults'
      option: 'crypt_style'
      value: 'sha512'

  - name: Install pam_mkuserdir
    become: true
    ansible.builtin.copy:
      src: 'files/usr/local/sbin/pam_mkuserdir'
      dest: '/usr/local/sbin/pam_mkuserdir'
      owner: 'root'
      group: 'root'
      mode: '0755'

  - name: CIS | Ensure custom authselect profile is used (create)
    become: true
    ansible.builtin.command:
      cmd: 'authselect create-profile custom-profile -b sssd'
      creates: '/etc/authselect/custom/custom-profile'
    register: authselect_create_custom_profile

  - name: CIS | Ensure custom authselect profile is used (check)
    become: true
    ansible.builtin.shell:
      cmd: 'authselect current | grep -c "custom-profile\|with-sudo\|with-faillock\|without-nullok"'
    register: authselect_check_custom_profile
    changed_when: authselect_check_custom_profile.stdout != '4'
    failed_when: authselect_check_custom_profile.stdout == '-1'

  - name: CIS | Ensure custom authselect profile is used (select)
    become: true
    ansible.builtin.command:
      cmd: 'authselect select custom/custom-profile with-sudo with-faillock without-nullok --force'
    when:
      - authselect_create_custom_profile is succeeded
      - authselect_check_custom_profile.stdout != '4'

  - name: CIS
    become: true
    ansible.builtin.template:
      src: "etc/authselect/custom/custom-profile/{{ item }}.j2"
      dest: "/etc/authselect/custom/custom-profile/{{ item }}"
      owner: 'root'
      group: 'root'
      mode: '0644'
    notify: Authselect apply changes
    with_items:
      - 'system-auth'

  - name: CIS | Create su group
    become: true
    ansible.builtin.group:
      name: "{{ pam_su_group }}"
      system: true
      state: present

  - name: CIS | Ensure access to the su command is restricted
    become: true
    ansible.builtin.template:
      src: 'etc/pam.d/su.j2'
      dest: '/etc/pam.d/su'
      owner: 'root'
      group: 'root'
      mode: '0644'

  # Flush any handlers that we might have called
  - name: Flush handlers
    ansible.builtin.meta:
      flush_handlers

  # Tags to be applied to this role (block)
  tags:
    - 'role_foolean_pam'
